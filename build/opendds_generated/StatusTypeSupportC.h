// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p23
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:151

#ifndef _TAO_IDL__HOME_HAPPIKIN_DEV_PROJECTS_MAJORPROJECT_EX2_BUILD_OPENDDS_GENERATED_STATUSTYPESUPPORTC_H_
#define _TAO_IDL__HOME_HAPPIKIN_DEV_PROJECTS_MAJORPROJECT_EX2_BUILD_OPENDDS_GENERATED_STATUSTYPESUPPORTC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types_IDLv4.h"
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  using namespace IDLv4;
}

TAO_END_VERSIONED_NAMESPACE_DECL

#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "StatusC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 


// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_ch.cpp:101



typedef ::TAO::DCPS::ZeroCopyDataSeq< Status, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> StatusSeq;

// TAO_IDL - Generated from
// be/be_interface.cpp:750



#if !defined (_STATUSTYPESUPPORT__VAR_OUT_CH_)
#define _STATUSTYPESUPPORT__VAR_OUT_CH_

class StatusTypeSupport;
typedef StatusTypeSupport *StatusTypeSupport_ptr;

typedef
  TAO_Objref_Var_T<
      StatusTypeSupport
    >
  StatusTypeSupport_var;

typedef
  TAO_Objref_Out_T<
      StatusTypeSupport
    >
  StatusTypeSupport_out;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:42



class  StatusTypeSupport
  : public virtual ::OpenDDS::DCPS::TypeSupport

{
public:
  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef StatusTypeSupport_ptr _ptr_type;
  typedef StatusTypeSupport_var _var_type;
  typedef StatusTypeSupport_out _out_type;

  // The static operations.
  static StatusTypeSupport_ptr _duplicate (StatusTypeSupport_ptr obj);

  static void _tao_release (StatusTypeSupport_ptr obj);

  static StatusTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
  static StatusTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static StatusTypeSupport_ptr _nil (void);

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:138

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  StatusTypeSupport (void);

  

  virtual ~StatusTypeSupport (void);

private:
  // Private and unimplemented for concrete interfaces.
  ACE_UNIMPLEMENTED_FUNC (StatusTypeSupport (const StatusTypeSupport &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (StatusTypeSupport (StatusTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  ACE_UNIMPLEMENTED_FUNC (StatusTypeSupport &operator= (const StatusTypeSupport &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (StatusTypeSupport &operator= (StatusTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
};
// TAO_IDL - Generated from
// be/be_interface.cpp:750



#if !defined (_STATUSDATAWRITER__VAR_OUT_CH_)
#define _STATUSDATAWRITER__VAR_OUT_CH_

class StatusDataWriter;
typedef StatusDataWriter *StatusDataWriter_ptr;

typedef
  TAO_Objref_Var_T<
      StatusDataWriter
    >
  StatusDataWriter_var;

typedef
  TAO_Objref_Out_T<
      StatusDataWriter
    >
  StatusDataWriter_out;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:42



class  StatusDataWriter
  : public virtual ::DDS::DataWriter

{
public:
  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef StatusDataWriter_ptr _ptr_type;
  typedef StatusDataWriter_var _var_type;
  typedef StatusDataWriter_out _out_type;

  // The static operations.
  static StatusDataWriter_ptr _duplicate (StatusDataWriter_ptr obj);

  static void _tao_release (StatusDataWriter_ptr obj);

  static StatusDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
  static StatusDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static StatusDataWriter_ptr _nil (void);

  virtual ::DDS::InstanceHandle_t register_instance (
    const ::Status & instance) = 0;

  virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
    const ::Status & instance,
    const ::DDS::Time_t & timestamp) = 0;

  virtual ::DDS::ReturnCode_t unregister_instance (
    const ::Status & instance,
    ::DDS::InstanceHandle_t handle) = 0;

  virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
    const ::Status & instance,
    ::DDS::InstanceHandle_t handle,
    const ::DDS::Time_t & timestamp) = 0;

  virtual ::DDS::ReturnCode_t write (
    const ::Status & instance_data,
    ::DDS::InstanceHandle_t handle) = 0;

  virtual ::DDS::ReturnCode_t write_w_timestamp (
    const ::Status & instance_data,
    ::DDS::InstanceHandle_t handle,
    const ::DDS::Time_t & source_timestamp) = 0;

  virtual ::DDS::ReturnCode_t dispose (
    const ::Status & instance_data,
    ::DDS::InstanceHandle_t instance_handle) = 0;

  virtual ::DDS::ReturnCode_t dispose_w_timestamp (
    const ::Status & instance_data,
    ::DDS::InstanceHandle_t instance_handle,
    const ::DDS::Time_t & source_timestamp) = 0;

  virtual ::DDS::ReturnCode_t get_key_value (
    ::Status & key_holder,
    ::DDS::InstanceHandle_t handle) = 0;

  virtual ::DDS::InstanceHandle_t lookup_instance (
    const ::Status & instance_data) = 0;

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:138

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  StatusDataWriter (void);

  

  virtual ~StatusDataWriter (void);

private:
  // Private and unimplemented for concrete interfaces.
  ACE_UNIMPLEMENTED_FUNC (StatusDataWriter (const StatusDataWriter &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (StatusDataWriter (StatusDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  ACE_UNIMPLEMENTED_FUNC (StatusDataWriter &operator= (const StatusDataWriter &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (StatusDataWriter &operator= (StatusDataWriter &&))
#endif /* ACE_HAS_CPP11 */
};
// TAO_IDL - Generated from
// be/be_interface.cpp:750



#if !defined (_STATUSDATAREADER__VAR_OUT_CH_)
#define _STATUSDATAREADER__VAR_OUT_CH_

class StatusDataReader;
typedef StatusDataReader *StatusDataReader_ptr;

typedef
  TAO_Objref_Var_T<
      StatusDataReader
    >
  StatusDataReader_var;

typedef
  TAO_Objref_Out_T<
      StatusDataReader
    >
  StatusDataReader_out;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:42



class  StatusDataReader
  : public virtual ::OpenDDS::DCPS::DataReaderEx

{
public:
  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef StatusDataReader_ptr _ptr_type;
  typedef StatusDataReader_var _var_type;
  typedef StatusDataReader_out _out_type;

  // The static operations.
  static StatusDataReader_ptr _duplicate (StatusDataReader_ptr obj);

  static void _tao_release (StatusDataReader_ptr obj);

  static StatusDataReader_ptr _narrow (::CORBA::Object_ptr obj);
  static StatusDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static StatusDataReader_ptr _nil (void);

  virtual ::DDS::ReturnCode_t read (
    ::StatusSeq & received_data,
    ::DDS::SampleInfoSeq & info_seq,
    ::CORBA::Long max_samples,
    ::DDS::SampleStateMask sample_states,
    ::DDS::ViewStateMask view_states,
    ::DDS::InstanceStateMask instance_states) = 0;

  virtual ::DDS::ReturnCode_t take (
    ::StatusSeq & received_data,
    ::DDS::SampleInfoSeq & info_seq,
    ::CORBA::Long max_samples,
    ::DDS::SampleStateMask sample_states,
    ::DDS::ViewStateMask view_states,
    ::DDS::InstanceStateMask instance_states) = 0;

  virtual ::DDS::ReturnCode_t read_w_condition (
    ::StatusSeq & data_values,
    ::DDS::SampleInfoSeq & sample_infos,
    ::CORBA::Long max_samples,
    ::DDS::ReadCondition_ptr a_condition) = 0;

  virtual ::DDS::ReturnCode_t take_w_condition (
    ::StatusSeq & data_values,
    ::DDS::SampleInfoSeq & sample_infos,
    ::CORBA::Long max_samples,
    ::DDS::ReadCondition_ptr a_condition) = 0;

  virtual ::DDS::ReturnCode_t read_next_sample (
    ::Status & received_data,
    ::DDS::SampleInfo & sample_info) = 0;

  virtual ::DDS::ReturnCode_t take_next_sample (
    ::Status & received_data,
    ::DDS::SampleInfo & sample_info) = 0;

  virtual ::DDS::ReturnCode_t read_instance (
    ::StatusSeq & received_data,
    ::DDS::SampleInfoSeq & info_seq,
    ::CORBA::Long max_samples,
    ::DDS::InstanceHandle_t a_handle,
    ::DDS::SampleStateMask sample_states,
    ::DDS::ViewStateMask view_states,
    ::DDS::InstanceStateMask instance_states) = 0;

  virtual ::DDS::ReturnCode_t take_instance (
    ::StatusSeq & received_data,
    ::DDS::SampleInfoSeq & info_seq,
    ::CORBA::Long max_samples,
    ::DDS::InstanceHandle_t a_handle,
    ::DDS::SampleStateMask sample_states,
    ::DDS::ViewStateMask view_states,
    ::DDS::InstanceStateMask instance_states) = 0;

  virtual ::DDS::ReturnCode_t read_instance_w_condition (
    ::StatusSeq & received_data,
    ::DDS::SampleInfoSeq & sample_infos,
    ::CORBA::Long max_samples,
    ::DDS::InstanceHandle_t a_handle,
    ::DDS::ReadCondition_ptr a_condition) = 0;

  virtual ::DDS::ReturnCode_t take_instance_w_condition (
    ::StatusSeq & received_data,
    ::DDS::SampleInfoSeq & sample_infos,
    ::CORBA::Long max_samples,
    ::DDS::InstanceHandle_t a_handle,
    ::DDS::ReadCondition_ptr a_condition) = 0;

  virtual ::DDS::ReturnCode_t read_next_instance (
    ::StatusSeq & received_data,
    ::DDS::SampleInfoSeq & info_seq,
    ::CORBA::Long max_samples,
    ::DDS::InstanceHandle_t a_handle,
    ::DDS::SampleStateMask sample_states,
    ::DDS::ViewStateMask view_states,
    ::DDS::InstanceStateMask instance_states) = 0;

  virtual ::DDS::ReturnCode_t take_next_instance (
    ::StatusSeq & received_data,
    ::DDS::SampleInfoSeq & info_seq,
    ::CORBA::Long max_samples,
    ::DDS::InstanceHandle_t a_handle,
    ::DDS::SampleStateMask sample_states,
    ::DDS::ViewStateMask view_states,
    ::DDS::InstanceStateMask instance_states) = 0;

  virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
    ::StatusSeq & data_values,
    ::DDS::SampleInfoSeq & sample_infos,
    ::CORBA::Long max_samples,
    ::DDS::InstanceHandle_t previous_handle,
    ::DDS::ReadCondition_ptr a_condition) = 0;

  virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
    ::StatusSeq & data_values,
    ::DDS::SampleInfoSeq & sample_infos,
    ::CORBA::Long max_samples,
    ::DDS::InstanceHandle_t previous_handle,
    ::DDS::ReadCondition_ptr a_condition) = 0;

  virtual ::DDS::ReturnCode_t return_loan (
    ::StatusSeq & received_data,
    ::DDS::SampleInfoSeq & info_seq) = 0;

  virtual ::DDS::ReturnCode_t get_key_value (
    ::Status & key_holder,
    ::DDS::InstanceHandle_t handle) = 0;

  virtual ::DDS::InstanceHandle_t lookup_instance (
    const ::Status & instance_data) = 0;

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:138

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  StatusDataReader (void);

  

  virtual ~StatusDataReader (void);

private:
  // Private and unimplemented for concrete interfaces.
  ACE_UNIMPLEMENTED_FUNC (StatusDataReader (const StatusDataReader &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (StatusDataReader (StatusDataReader &&))
#endif /* ACE_HAS_CPP11 */
  ACE_UNIMPLEMENTED_FUNC (StatusDataReader &operator= (const StatusDataReader &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (StatusDataReader &operator= (StatusDataReader &&))
#endif /* ACE_HAS_CPP11 */
};
// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_STATUSTYPESUPPORT__TRAITS_)
#define _STATUSTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::StatusTypeSupport>
  {
    static ::StatusTypeSupport_ptr duplicate (
        ::StatusTypeSupport_ptr p);
    static void release (
        ::StatusTypeSupport_ptr p);
    static ::StatusTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::StatusTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_STATUSDATAWRITER__TRAITS_)
#define _STATUSDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::StatusDataWriter>
  {
    static ::StatusDataWriter_ptr duplicate (
        ::StatusDataWriter_ptr p);
    static void release (
        ::StatusDataWriter_ptr p);
    static ::StatusDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::StatusDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_STATUSDATAREADER__TRAITS_)
#define _STATUSDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::StatusDataReader>
  {
    static ::StatusDataReader_ptr duplicate (
        ::StatusDataReader_ptr p);
    static void release (
        ::StatusDataReader_ptr p);
    static ::StatusDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::StatusDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_codegen.cpp:1657

#if defined (__ACE_INLINE__)
#include "StatusTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

